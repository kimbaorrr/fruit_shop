@model shoptraicay.Models.SanPham
@using shoptraicay.Models
@{
    ViewBag.Title = "UpdateSP";
    List<LoaiSP> loaiSPs = Common.GetLoaiSPs();
}

<h2>UpdateSP</h2>

@using (Html.BeginForm("UpdateSP", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SanPham</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.maSP)
        @Html.HiddenFor(m => m.taiKhoan)

        <div class="form-group">
            @Html.Label("Nhập tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tenSP, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tên sản phẩm muốn sửa" } })
                @Html.ValidationMessageFor(model => model.tenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Hình sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="hinhSP" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nội dung tóm tắt", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ndTomTat, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nội dung tóm tắt..." } })
                @Html.ValidationMessageFor(model => model.ndTomTat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nội dung", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.noiDung, new { @rows = "7", @class = "form-control", @style = "margin: 0 7px;", @id = "ndBaiViet2", @placeholder = "Mô tả về sản phẩm..." })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mã loại", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="loaiSP" class="form-control">
                    @foreach (LoaiSP l in loaiSPs)
                    {
                        <option value="@l.maLoai">@l.tenLoai</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Giá bán", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.giaBan, new { htmlAttributes = new { @class = "form-control", @placeholder = "Giá bán" } })
                @Html.ValidationMessageFor(model => model.giaBan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Giảm giá", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.giamGia, new { htmlAttributes = new { @class = "form-control", @placeholder = "Giảm giá" } })
                @Html.ValidationMessageFor(model => model.giamGia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày đăng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ngayDang, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tài khoản đăng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.taiKhoan, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.taiKhoan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script src="https://cdn.tiny.cloud/1/h51q5yt2inxmfi7d3yagm5nofygcwx9dhwo2ujixosmr9yxi/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: 'textarea#ndBaiViet2',
        plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name'
    });
</script>